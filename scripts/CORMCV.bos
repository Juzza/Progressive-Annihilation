#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define MAX_UNLOAD_RADIUS [300]
#define UNLOAD_TIME 10

piece  base, body_right, rdoor1, rdoor2, body_left, ldoor1, ldoor2, wakes,
       w1, w2, w3, w4, blast, load_shoulder, load_arm, unload_shoulder,
       unload_arm, goal_shoulder, goal_arm, wheels, wheel1, wheel2, wheel3, wheel4,
       wheel5, wheel6, wheel7, wheel8, bwheel1, bwheel2, bwheel3, bwheel4,
       front, rear, supportbase, supportleft1, supportleft2, supportmid1, supportmid2, supportright1,
	   supportright2, translinkleft, translinkmid, translinkright, flare1, flare2, flare3;
       
static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_8, Static_Var_9;



StartMoving()
{
	signal 2;
	set-signal-mask 2;
	spin wheel1 around x-axis speed <90.> accelerate <4510.>;
	spin wheel2 around x-axis speed <90.> accelerate <4501.>;
	spin wheel3 around x-axis speed <90.> accelerate <4510.>;
	spin wheel4 around x-axis speed <90.> accelerate <4510.>;
	spin wheel5 around x-axis speed <90.> accelerate <4510.>;
	spin wheel6 around x-axis speed <90.> accelerate <4501.>;
	spin wheel7 around x-axis speed <90.> accelerate <4510.>;
	spin wheel8 around x-axis speed <90.> accelerate <4510.>;
	spin bwheel1 around x-axis speed <90.> accelerate <4510.>;
	spin bwheel2 around x-axis speed <90.> accelerate <4501.>;
	spin bwheel3 around x-axis speed <90.> accelerate <4510.>;
	spin bwheel4 around x-axis speed <90.> accelerate <4510.>;
	sleep 300;
	spin wheel1 around x-axis speed <150.> accelerate <4510.>;
	spin wheel2 around x-axis speed <150.> accelerate <4510.>;
	spin wheel3 around x-axis speed <150.> accelerate <4510.>;
	spin wheel4 around x-axis speed <150.> accelerate <4510.>;
	spin wheel5 around x-axis speed <150.> accelerate <4510.>;
	spin wheel6 around x-axis speed <150.> accelerate <4510.>;
	spin wheel7 around x-axis speed <150.> accelerate <4510.>;
	spin wheel8 around x-axis speed <150.> accelerate <4510.>;
	spin bwheel1 around x-axis speed <150.> accelerate <4510.>;
	spin bwheel2 around x-axis speed <150.> accelerate <4510.>;
	spin bwheel3 around x-axis speed <150.> accelerate <4510.>;
	spin bwheel4 around x-axis speed <150.> accelerate <4510.>;
	Static_Var_2 = 1;
	while( TRUE )
	{
		emit-sfx 3 from w1;
		emit-sfx 3 from w2;
		emit-sfx 3 from w3;
		emit-sfx 3 from w4;
		emit-sfx 5 from w1;
		emit-sfx 5 from w2;
		emit-sfx 5 from w3;
		emit-sfx 5 from w4;
		sleep 300;
	}
}

StopMoving()
{
	signal 2;
	stop-spin wheel1 around x-axis decelerate <2260.>;
	stop-spin wheel2 around x-axis decelerate <2260.>;
	stop-spin wheel3 around x-axis decelerate <2260.>;
	stop-spin wheel4 around x-axis decelerate <2260.>;
	stop-spin wheel5 around x-axis decelerate <2260.>;
	stop-spin wheel6 around x-axis decelerate <2260.>;
	stop-spin wheel7 around x-axis decelerate <2260.>;
	stop-spin wheel8 around x-axis decelerate <2260.>;
	stop-spin bwheel1 around x-axis decelerate <2260.>;
	stop-spin bwheel2 around x-axis decelerate <2260.>;
	stop-spin bwheel3 around x-axis decelerate <2260.>;
	stop-spin bwheel4 around x-axis decelerate <2260.>;
	Static_Var_2 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from supportbase;
			emit-sfx smoketype from ldoor1;
			emit-sfx smoketype from wheel6;
			emit-sfx smoketype from front;
			emit-sfx smoketype from rear;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	Static_Var_3 = 1;
	Static_Var_4 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_4 )
	{
		Static_Var_3 = requestedstate;
		return (0);
	}
	Static_Var_4 = 1;
	currentstate = Static_Var_3;
	Static_Var_3 = requestedstate;
	Static_Var_4 = 0;
}

Create()
{
	Static_Var_1 = 0;
	call-script InitState();
	start-script SmokeUnit();
	start-script RequestState(0);
}

SweetSpot(piecenum)
{
	piecenum = supportbase;
}

QueryTransport(Func_Var_1)
{
	Func_Var_1 = 1;
}

Activate()
{
	Static_Var_1 = 1;
}

TransportPickup(unitid)
{
	if( Static_Var_5 == 0 )
	{
		attach-unit unitid to translinkmid;
		++Static_Var_5;
		Static_Var_7 = 1;
	}
	else if( Static_Var_5 == 1 )
	{
		attach-unit unitid to translinkleft;
		++Static_Var_5;
		Static_Var_8 = 1;
	}
	else if( Static_Var_5 == 2 )
	{
		attach-unit unitid to translinkright;
		++Static_Var_5;
		Static_Var_9 = 1;
	}
	start-script RequestState(0);
}

Deactivate()
{
	Static_Var_1 = 0;
}

AimPrimary(heading, pitch)
{
	sleep 100;
	return (Static_Var_7);
}

FirePrimary()
{
	if( Static_Var_7 == 1 )
	{
		sleep 100;
	}
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

AimFromPrimary(piecenum)
{
	piecenum = flare1;
}

AimSecondary(heading, pitch)
{
	sleep 100;
	return (Static_Var_8);
}

FireSecondary()
{
	if( Static_Var_8 == 1 )
	{
		sleep 100;
	}
}

QuerySecondary(piecenum)
{
	piecenum = flare2;
}

AimFromSecondary(piecenum)
{
	piecenum = flare2;
}

AimTertiary(heading, pitch)
{
	sleep 100;
	return (Static_Var_9);
}

FireTertiary()
{
	if( Static_Var_9 == 1 )
	{
		sleep 100;
	}
}

QueryTertiary(piecenum)
{
	piecenum = flare3;
}

AimFromTertiary(piecenum)
{
	piecenum = flare3;
}

TransportDrop(Func_Var_1,xz,unitid)
{
	drop-unit Func_Var_1;
	drop-unit Func_Var_1;
	drop-unit Func_Var_1;
	Static_Var_5 = 0;
	Static_Var_7 = 0;
	Static_Var_8 = 0;
	Static_Var_9 = 0;
	start-script RequestState(1);
}

Killed(severity, corpsetype)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		return (0);
	}
	corpsetype = 3;
}
