#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, head_weapon, jets, droppos, vertjet1, vertjet2, thrust1, thrust2, thrust3, thrust4;

static-var  statechg_DesiredState, statechg_StateChanging;


activatescr()
{
	if( TRUE )
	{
		turn jets to x-axis <0.000000> now;
		turn jets to x-axis <90.021978> speed <62.000000>;
		sleep 1457;
	}
	sleep 6;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

deactivatescr()
{
	if( TRUE )
	{
		turn jets to x-axis <90.021978> now;
		turn jets to x-axis <0.000000> speed <62.000000>;
		sleep 1446;
	}
	sleep 4;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

QueryPrimary(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode jets type BITMAPONLY | BITMAP2;
		explode vertjet1 type BITMAPONLY | BITMAP4;
		explode vertjet2 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode jets type SHATTER | BITMAP2;
		explode vertjet1 type FALL | BITMAP4;
		explode vertjet2 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode jets type SHATTER | BITMAP2;
		explode vertjet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode vertjet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode jets type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode vertjet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode vertjet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
