#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece 	base, hull, turret1, sleeves1, culasse1, barrel1, flare1,
		turret2, sleeves2, culasse2, barrel2, flare2, radar, sfx1,
		sfx2, ground, turret, canon, firepoint1,  firepoint2,  firepoint3,
		firepoint4, barrelA, barrelB, barrelC, barrelD, flarem1,
		flarem2, flarem3, flarem4, cabin;

static-var  gun_1, gun_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, Static_Var_9, activeBarrel;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			32

FIdle()
{
    spin turret around y-axis speed <25.0>;
	turn turret to x-axis <0.0> - <45.0> speed <45.0>;

}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from hull;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	hide flare1;
	hide flare2;
	hide flarem1;
	hide flarem2;
	hide flarem3;
	hide flarem4;
	hide firepoint1;
	hide firepoint2;
	hide firepoint3;
	hide firepoint4;
	turn turret2 to y-axis <180.> now;
	spin radar around y-axis speed <100.>;
	
    activeBarrel = 0;
    
	while (get BUILD_PERCENT_LEFT)
	{
		sleep 1000;
	}
	
	start-script SmokeUnit();
    call-script FIdle();
}

RestoreAfterDelay()
{
	sleep 6000;
	turn turret1 to y-axis <0.> speed <35.>;
	turn sleeves1 to x-axis <0.> speed <15.>;
	turn turret2 to y-axis <180.> speed <35.>;
	turn sleeves2 to x-axis <0.> speed <15.>;
}

RestoreAfterDelay2()
{
	sleep 6000;
	turn turret to y-axis <0.000000> speed <45.0>;
	turn turret to x-axis <0.000000> speed <45.0>;
	call-script FIdle();

}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from sfx1;
		emit-sfx 2 from sfx2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	turn turret1 to y-axis heading speed <140.>;
	turn sleeves1 to x-axis <0.> - pitch speed <60.>;
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeves1 around x-axis;
	
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	
	turn turret2 to y-axis heading speed <140.>;
	turn sleeves2 to x-axis <0.> - pitch speed <60.>;
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeves2 around x-axis;
	
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel1 to z-axis [-2.2] speed [1250.];
	move culasse1 to z-axis [-2.2] speed [1250.];
	wait-for-move barrel1 along z-axis;
	move barrel1 to z-axis [0.] speed [2.5.];
	move culasse1 to z-axis [0.] speed [2.5.];
	emit-sfx 1024 from flare1;
}

FireSecondary()
{
	move barrel2 to z-axis [-2.2] speed [1250.];
	move culasse2 to z-axis [-2.2.] speed [1250.];
	wait-for-move barrel2 along z-axis;
	move barrel2 to z-axis [0.] speed [2.5.];
	move culasse2 to z-axis [0.] speed [2.5.];
	emit-sfx 1024 from flare2;
}


AimFromPrimary(piecenum)
{
	piecenum = sleeves1;
}

AimFromSecondary(piecenum)
{
	piecenum = sleeves2;
}

QueryPrimary(piecenum)
{
	piecenum = flare1;
}

QuerySecondary(piecenum)
{
	piecenum = flare2;
}

AimWeapon3(heading, pitch)
{
	signal 64;
	set-signal-mask 64;
	
    stop-spin turret around y-axis;
	turn turret to y-axis heading speed  <360.0>;
	turn turret to x-axis <0.000000> - pitch speed  <180.0>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	
	start-script RestoreAfterDelay2();
	return (1);
}

QueryWeapon3(piecenum)
{
	if (activeBarrel == 0)         piecenum = flarem1;
	else if (activeBarrel == 1)    piecenum = flarem2;
	else if (activeBarrel == 2)    piecenum = flarem3;
	else if (activeBarrel == 3)    piecenum = flarem4;
}

FireWeapon3()
{
}

Shot3()
{
    if (activeBarrel == 0)
    {
        emit-sfx 1024 from firepoint1;
		move barrelA to z-axis [-2.0] now;
		move barrelA to z-axis [0.0] speed [8.0];
        activeBarrel = 1;
    }
	else if (activeBarrel == 1)
    {
        emit-sfx 1024 from firepoint2;
		move barrelB to z-axis [-2.0] now;
		move barrelB to z-axis [0.0] speed [8.0];
        activeBarrel = 2;
    }
	else if (activeBarrel == 2)
    {
        emit-sfx 1024 from firepoint3;
		move barrelC to z-axis [-2.] now;
		move barrelC to z-axis [0.] speed [8.];
        activeBarrel = 3;
    }
	else if (activeBarrel == 3)
    {
        emit-sfx 1024 from firepoint4;
		move barrelD to z-axis [-2.] now;
		move barrelD to z-axis [0.] speed [8.];
        activeBarrel = 0;
    }
}


AimFromWeapon3(piecenum)
{
	piecenum = ground;
}
SweetSpot(piecenum)
{
	piecenum = cabin;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare1 type BITMAPONLY | BITMAP1;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode barrel2 type BITMAPONLY | BITMAP2;
		explode hull type BITMAPONLY | BITMAP3;
		explode flare1 type BITMAPONLY | BITMAP4;
		explode flare2 type BITMAPONLY | BITMAP5;
		explode turret1 type BITMAPONLY | BITMAP2;
		explode sfx1 type BITMAPONLY | BITMAP3;
		explode sfx2 type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 1;
		explode barrel1 type FALL | BITMAP1;
		explode barrel2 type FALL | BITMAP2;
		explode hull type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | BITMAP4;
		explode flare2 type FALL | BITMAP5;
		explode turret1 type BITMAPONLY | BITMAP2;
		explode sfx1 type FALL | BITMAP3;
		explode sfx2 type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 1;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode hull type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode turret1 type SHATTER | BITMAP2;
		explode sfx1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sfx2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 1;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode hull type BITMAPONLY | BITMAP3;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode turret1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode sfx1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sfx2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
