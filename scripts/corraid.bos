#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, flare, turret, barrel, sleeve, muzzle, ejector, groundflash, turret1, miniturret, flaremini;

static-var  Static_Var_1, Static_Var_2, Static_Var_3;

// Signal definitions
#define SIG_AIM	2
#define SIG_LOCK 4

LockTurret(heading)
{
	set-signal-mask SIG_LOCK;
	
	while(1)
	{
		turn turret to y-axis (heading - get HEADING) speed (get 1030);
		sleep 20;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	turn base to x-axis anglex speed <50.>;
	turn base to z-axis anglez speed <50.>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.> speed <20.>;
	turn base to x-axis <0.> speed <20.>;
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.>;
	turn base to x-axis Func_Var_1 speed <105.>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.> speed <30.>;
	turn base to x-axis <0.> speed <30.>;
}

Create()
{
	hide flare;
	hide ejector;
	hide muzzle;
	hide groundflash;
	hide flaremini;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	Static_Var_1 = Func_Var_1 * 2;
}

RestoreAfterDelay()
{
	sleep 6000;
	signal SIG_LOCK;
	turn turret to y-axis <0.000000> speed (get 1030);
	turn sleeve to x-axis <0.000000> speed (get 1031);
	turn miniturret to y-axis <0.> speed <90.>;
	turn miniturret to x-axis <0.> speed <90.>;
}

AimPrimary(heading, pitch)
{
	signal SIG_LOCK;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	var absHeading;
	absHeading = heading + get HEADING;

	turn turret to y-axis heading speed (get 1030);
	turn sleeve to x-axis <0.000000> - pitch speed (get 1031);
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;

	start-script LockTurret(absHeading);
	start-script RestoreAfterDelay();

	return (1);
}

FirePrimary()
{
	emit-sfx 1024 from muzzle;
	emit-sfx 1025 from muzzle;
	move barrel to z-axis [-2.] speed [500.];
	sleep 150;
	wait-for-move barrel along z-axis;
	move barrel to z-axis [0.] speed [3.];
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimSecondary(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn miniturret to y-axis heading speed <180.>;
	turn miniturret to x-axis <-0.> - pitch speed <180.>;
	wait-for-turn miniturret around y-axis;
	return (1);
}

FireSecondary()
{
	show flaremini;
	sleep 150;
	hide flaremini;
}

AimFromSecondary(piecenum)
{
	piecenum = miniturret;
}

QuerySecondary(piecenum)
{
	piecenum = flaremini;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel type SHATTER | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode flare type BITMAPONLY | BITMAP3;
		explode sleeve type BITMAPONLY | BITMAP4;
		explode turret type BITMAPONLY | BITMAP5;
		explode turret1 type BITMAPONLY | BITMAP5;
		explode miniturret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel type FALL | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode flare type FALL | BITMAP3;
		explode sleeve type FALL | BITMAP4;
		explode turret type SHATTER | BITMAP5;
		explode turret1 type SHATTER | BITMAP5;
		explode miniturret type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP2;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode turret type SHATTER | BITMAP5;
		explode turret1 type SHATTER | BITMAP5;
		explode miniturret type FALL | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode barrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP2;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode turret1 type SHATTER | BITMAP5;
	explode miniturret type FALL | BITMAP2;
}
